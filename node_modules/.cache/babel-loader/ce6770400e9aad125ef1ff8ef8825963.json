{"ast":null,"code":"var _jsxFileName = \"/home/cyf/Repos/trayio/src/Components/UserForm.jsx\";\nimport React, { Component } from 'react';\nimport UserDetails from './UserDetails';\nimport UserPrivacy from './UserPrivacy';\nimport UserConfirm from './UserConfirm';\nimport UserDone from './UserDone';\nexport class UserForm extends Component {\n  constructor() {\n    super();\n\n    this.nextStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.handleChange = input => e => {\n      const value = e.target.value;\n      console.log(e.target.value);\n      this.setState({\n        [input]: value\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      role: '',\n      password: '',\n      step: 1,\n      isUpdate: false,\n      isCommunication: false\n    };\n  } //Proceed to next step\n\n\n  render() {\n    //Destructuring the elements of the state to have a clean code\n    //by using name or email instead of this.state.name or this.state.email\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          role = _this$state.role,\n          isUpdate = _this$state.isUpdate,\n          isCommunication = _this$state.isCommunication,\n          step = _this$state.step; //I created the const values to pass all the attributes of the state as a prop\n\n    const values = {\n      name,\n      email,\n      role,\n      isUpdate,\n      isCommunication //Because i only have few tabs to return based on the step the \n      //user is, i will use a switch\n\n    };\n\n    switch (step) {\n      case 1:\n        return React.createElement(UserDetails, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          values: values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(UserPrivacy, {\n          values: values,\n          prevStep: this.prevStep,\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n\n      case 3:\n        return React.createElement(UserConfirm, {\n          prevStep: this.prevStep,\n          nextStep: this.nextStep,\n          values: values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n\n      case 4:\n        return React.createElement(UserDone, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n\n      default:\n    }\n  }\n\n}\nexport default UserForm;","map":{"version":3,"sources":["/home/cyf/Repos/trayio/src/Components/UserForm.jsx"],"names":["React","Component","UserDetails","UserPrivacy","UserConfirm","UserDone","UserForm","constructor","nextStep","step","state","setState","prevStep","handleChange","input","e","value","target","console","log","name","email","role","password","isUpdate","isCommunication","render","values"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AACtCM,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,QAdc,GAcH,MAAM;AAAA,YACPC,IADO,GACE,KAAKC,KADP,CACPD,IADO;AAEf,WAAKE,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAEA,IAAI,GAAG;AADD,OAAd;AAGD,KAnBa;;AAAA,SAsBdG,QAtBc,GAsBH,MAAM;AAAA,YACPH,IADO,GACE,KAAKC,KADP,CACPD,IADO;AAEf,WAAKE,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAEA,IAAI,GAAG;AADD,OAAd;AAGD,KA3Ba;;AAAA,SA8BdI,YA9Bc,GA8BCC,KAAK,IAAIC,CAAC,IAAI;AAAA,YACnBC,KADmB,GACTD,CAAC,CAACE,MADO,CACnBD,KADmB;AAE3BE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,WAAKL,QAAL,CAAc;AAAE,SAACG,KAAD,GAASE;AAAX,OAAd;AACD,KAlCa;;AAEZ,SAAKN,KAAL,GAAa;AACXU,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXd,MAAAA,IAAI,EAAE,CALK;AAMXe,MAAAA,QAAQ,EAAE,KANC;AAOXC,MAAAA,eAAe,EAAE;AAPN,KAAb;AASD,GAZqC,CActC;;;AAyBAC,EAAAA,MAAM,GAAG;AACP;AACA;AAFO,wBAUH,KAAKhB,KAVF;AAAA,UAILU,IAJK,eAILA,IAJK;AAAA,UAKLC,KALK,eAKLA,KALK;AAAA,UAMLC,IANK,eAMLA,IANK;AAAA,UAOLE,QAPK,eAOLA,QAPK;AAAA,UAQLC,eARK,eAQLA,eARK;AAAA,UASLhB,IATK,eASLA,IATK,EAYP;;AACA,UAAMkB,MAAM,GAAG;AACbP,MAAAA,IADa;AAEbC,MAAAA,KAFa;AAGbC,MAAAA,IAHa;AAIbE,MAAAA,QAJa;AAKbC,MAAAA,eALa,CAQf;AACA;;AATe,KAAf;;AAWA,YAAQhB,IAAR;AACE,WAAK,CAAL;AACE,eACE,oBAAC,WAAD;AACE,UAAA,QAAQ,EAAE,KAAKD,QADjB;AAEE,UAAA,YAAY,EAAE,KAAKK,YAFrB;AAGE,UAAA,MAAM,EAAEc,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAQF,WAAK,CAAL;AACE,eACE,oBAAC,WAAD;AACE,UAAA,MAAM,EAAEA,MADV;AAEE,UAAA,QAAQ,EAAE,KAAKf,QAFjB;AAGE,UAAA,QAAQ,EAAE,KAAKJ,QAHjB;AAIE,UAAA,YAAY,EAAE,KAAKK,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAQF,WAAK,CAAL;AACE,eACE,oBAAC,WAAD;AACE,UAAA,QAAQ,EAAE,KAAKD,QADjB;AAEE,UAAA,QAAQ,EAAE,KAAKJ,QAFjB;AAGE,UAAA,MAAM,EAAEmB,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMF,WAAK,CAAL;AACE,eAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AA5BF;AAgCD;;AA/FqC;AAkGxC,eAAerB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport UserDetails from './UserDetails';\nimport UserPrivacy from './UserPrivacy'\nimport UserConfirm from './UserConfirm';\nimport UserDone from './UserDone'\n\nexport class UserForm extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      email: '',\n      role: '',\n      password: '',\n      step: 1,\n      isUpdate: false,\n      isCommunication: false\n    }\n  }\n\n  //Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    })\n  }\n\n  //Go back to prev step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1\n    })\n  }\n  s\n  //Handle fields change\n  handleChange = input => e => {\n    const { value } = e.target\n    console.log(e.target.value)\n    this.setState({ [input]: value });\n  }\n\n\n\n  render() {\n    //Destructuring the elements of the state to have a clean code\n    //by using name or email instead of this.state.name or this.state.email\n    const {\n      name,\n      email,\n      role,\n      isUpdate,\n      isCommunication,\n      step,\n    } = this.state;\n\n    //I created the const values to pass all the attributes of the state as a prop\n    const values = {\n      name,\n      email,\n      role,\n      isUpdate,\n      isCommunication\n    }\n\n    //Because i only have few tabs to return based on the step the \n    //user is, i will use a switch\n\n    switch (step) {\n      case 1:\n        return (\n          <UserDetails\n            nextStep={this.nextStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n\n      case 2:\n        return (\n          <UserPrivacy\n            values={values}\n            prevStep={this.prevStep}\n            nextStep={this.nextStep}\n            handleChange={this.handleChange} />\n        );\n\n      case 3:\n        return (\n          <UserConfirm\n            prevStep={this.prevStep}\n            nextStep={this.nextStep}\n            values={values} />\n        )\n      case 4:\n        return <UserDone />\n      default:\n\n    }\n\n  }\n}\n\nexport default UserForm\n"]},"metadata":{},"sourceType":"module"}