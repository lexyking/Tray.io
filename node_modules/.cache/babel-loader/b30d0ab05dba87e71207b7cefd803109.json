{"ast":null,"code":"var _jsxFileName = \"/home/cyf/Repos/trayio/src/Components/UserForm.jsx\";\nimport React, { Component } from 'react';\nimport UserDetails from './UserDetails';\nimport UserPrivacy from './UserPrivacy';\nimport UserConfirm from './UserConfirm';\nimport UserDone from './UserDone';\nexport class UserForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      role: '',\n      password: '',\n      step: 1,\n      isUpdate: false,\n      isCommunication: false //Proceed to next step\n\n    };\n\n    this.nextStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.handleChange = input => e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value,\n            type = _e$target.type,\n            checked = _e$target.checked;\n      type === \"checkbox\" ? this.setState({\n        [name]: checked\n      }) : this.setState({\n        [input]: value\n      });\n    };\n  }\n\n  render() {\n    //Destructuring the elements of the state to have a clean code\n    //by using name or email instead of this.state.name or this.state.email\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          role = _this$state.role,\n          isUpdate = _this$state.isUpdate,\n          isCommunication = _this$state.isCommunication,\n          step = _this$state.step; //I created the const values to pass all the attributes of the state as a prop\n\n    const values = {\n      name,\n      email,\n      role,\n      isUpdate,\n      isCommunication //Because i only have few tabs to return based on the step the \n      //user is, i will use a switch\n\n    };\n\n    switch (step) {\n      case 1:\n        return React.createElement(UserDetails, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          values: values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(UserPrivacy, {\n          values: values,\n          prevStep: this.prevStep,\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n\n      case 3:\n        return React.createElement(UserConfirm, {\n          prevStep: this.prevStep,\n          nextStep: this.nextStep,\n          values: values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n\n      case 4:\n        return React.createElement(UserDone, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n\n      default:\n    }\n  }\n\n}\nexport default UserForm;","map":{"version":3,"sources":["/home/cyf/Repos/trayio/src/Components/UserForm.jsx"],"names":["React","Component","UserDetails","UserPrivacy","UserConfirm","UserDone","UserForm","state","name","email","role","password","step","isUpdate","isCommunication","nextStep","setState","prevStep","handleChange","input","e","target","value","type","checked","render","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport UserDetails from './UserDetails';\nimport UserPrivacy from './UserPrivacy'\nimport UserConfirm from './UserConfirm';\nimport UserDone from './UserDone'\n\nexport class UserForm extends Component {\n  state = {\n    name: '',\n    email: '',\n    role: '',\n    password: '',\n    step: 1,\n    isUpdate: false,\n    isCommunication: false\n  }\n\n  //Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    })\n  }\n\n  //Go back to prev step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1\n    })\n  }\n\n  //Handle fields change\n  handleChange = input => e => {\n    const { name, value, type, checked } = e.target\n    type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [input]: value });\n  }\n\n  render() {\n    //Destructuring the elements of the state to have a clean code\n    //by using name or email instead of this.state.name or this.state.email\n    const {\n      name,\n      email,\n      role,\n      isUpdate,\n      isCommunication,\n      step,\n    } = this.state;\n\n    //I created the const values to pass all the attributes of the state as a prop\n    const values = {\n      name,\n      email,\n      role,\n      isUpdate,\n      isCommunication\n    }\n\n    //Because i only have few tabs to return based on the step the \n    //user is, i will use a switch\n\n    switch (step) {\n      case 1:\n        return (\n          <UserDetails\n            nextStep={this.nextStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n\n      case 2:\n        return (\n          <UserPrivacy\n            values={values}\n            prevStep={this.prevStep}\n            nextStep={this.nextStep}\n            handleChange={this.handleChange} />\n        );\n\n      case 3:\n        return (\n          <UserConfirm\n            prevStep={this.prevStep}\n            nextStep={this.nextStep}\n            values={values} />\n        )\n      case 4:\n        return <UserDone />\n      default:\n\n    }\n\n  }\n}\n\nexport default UserForm\n"]},"metadata":{},"sourceType":"module"}